%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: mcfunction-snapshot
file_extensions:
  - mcfunction
scope: source.mcfunction-snapshot
contexts:
  main:
    - include: comment.block
    - include: comment.plain
    - include: command
    - include: unknown
  advancement_map.content:
    - include: common.block
  command:
    - match: '^[ \t]*(?=[^\s#])'
      push:
        - meta_scope: meta._.command.mcfunction
        - match: \n
          pop: true
        - include: commands
  commands:
    - include: generated.commands
  comment.block:
    - match: '^[ \t]*((#)(>)((.*)))$'
      captures:
        1: comment.block._.block.comment.mcfunction
        2: markup.list._.symbol.block.comment.mcfunction
        3: markup.list._.prefix.block.comment.mcfunction
        4: markup.bold._.heading_1.block.comment.mcfunction
        5: markup.list._.heading_2.block.comment.mcfunction
      push:
        - meta_scope: meta._.block.comment.mcfunction
        - match: '^(?![ \t]*#)'
          pop: true
        - include: comment.block.lines
  comment.block.line:
    - match: ((\@\w*)\b(.*))$
      scope: meta._.annotation.line.block.comment.mcfunction
      captures:
        1: comment.block._.block.comment.mcfunction
        2: markup.heading._.label.annotation.block.comment.mcfunction
        3: comment.block._.text.annotation.block.comment.mcfunction
    - match: ((>)((.*)))$
      scope: meta._.heading.line.block.comment.mcfunction
      captures:
        1: comment.block._.block.comment.mcfunction
        2: markup.list._.prefix.block.comment.mcfunction
        3: markup.bold._.heading_1.block.comment.mcfunction
        4: markup.list._.heading_2.block.comment.mcfunction
    - match: (.*)$
      scope: meta._.text.line.block.comment.mcfunction
      captures:
        1: comment.block._.block.comment.mcfunction
  comment.block.lines:
    - match: '^[ \t]*((#)[ \t]*)'
      captures:
        1: comment.block._.block.comment.mcfunction
        2: markup.list._.symbol.block.comment.mcfunction
      push:
        - meta_scope: meta._.lines.block.comment.mcfunction
        - match: $
          pop: true
        - include: comment.block.line
  comment.plain:
    - match: '^[ \t]*(#.*)$'
      scope: meta._.plain.comment.mcfunction
      captures:
        1: comment._.plain.comment.mcfunction
  common.block:
    - match: '[^\n\{\}\[\]\"\'']+'
      scope: string._.content.dict.generic.mcfunction
    - include: common.dict
    - include: common.list
    - include: common.quoted_string
  common.boolean:
    - match: (?<!\w)(true|false)(?!\w)
      scope: constant.numeric._.boolean.mcfunction
  common.dict:
    - match: '(\{)'
      captures:
        1: storage._.bracket.dict.generic.mcfunction
      push:
        - match: '(?=\n)|(\})'
          captures:
            1: storage._.bracket.dict.generic.mcfunction
          pop: true
        - include: common.block
  common.dict.whitespace:
    - match: '(?<=[\{\,]) +(?=[^\}\,])'
    - match: '(?<=[^\{\,]) +(?=[\}\,])'
    - match: '(?<=\{) +(?=\})'
  common.double_quoted_string:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: common.double_quoted_string.content
  common.double_quoted_string.content:
    - match: '[^\\\"\n]'
      scope: string._.string.mcfunction
    - match: '\\[^\n]'
      scope: constant.character.escape._.string_escape.mcfunction
    - match: ((\\))
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  common.double_range:
    - match: (\-?\d*\.?\d+)(\.\.)(\-?\d*\.?\d+)?
      captures:
        1: constant.numeric._.minimum.range.mcfunction
        2: keyword.control._.ellipsis.range.mcfunction
        3: constant.numeric._.maximum.range.mcfunction
    - match: (\-?\d*\.?\d+)?(\.\.)(\-?\d*\.?\d+)
      captures:
        1: constant.numeric._.minimum.range.mcfunction
        2: keyword.control._.ellipsis.range.mcfunction
        3: constant.numeric._.maximum.range.mcfunction
    - match: (\-?\d*\.?\d+)
      scope: constant.numeric._.number.mcfunction
  common.integer_range:
    - match: (\-?\d+)(\.\.)(\-?\d+)?
      captures:
        1: constant.numeric._.minimum.range.mcfunction
        2: keyword.control._.ellipsis.range.mcfunction
        3: constant.numeric._.maximum.range.mcfunction
    - match: (\-?\d+)?(\.\.)(\-?\d+)
      captures:
        1: constant.numeric._.minimum.range.mcfunction
        2: keyword.control._.ellipsis.range.mcfunction
        3: constant.numeric._.maximum.range.mcfunction
    - match: (\-?\d+)
      scope: constant.numeric._.number.mcfunction
  common.list:
    - match: '(\[)'
      captures:
        1: storage._.bracket.list.generic.mcfunction
      push:
        - match: '(?=\n)|(\])'
          captures:
            1: storage._.bracket.list.generic.mcfunction
          pop: true
        - include: common.block
  common.list.whitespace:
    - match: '(?<=[\[\,]) +(?=[^\]\,])'
    - match: '(?<=[^\[\,]) +(?=[\]\,])'
    - match: '(?<=\[) +(?=\])'
  common.message:
    - match: '([^\@\n]+)'
      scope: string._.string.mcfunction
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: '(?=\n)|(\])'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          pop: true
        - include: target_selector.content
        - include: error.command_line
    - match: '(\@[parse])'
      scope: support.class._.base.target_selector.mcfunction
    - match: '([^\n])'
      scope: string._.string.mcfunction
  common.number:
    - match: (?<!\d)(\-?\d*\.?\d+)(?!\d)
      scope: constant.numeric._.number.mcfunction
  common.position:
    - include: common.position.abs_rel
    - include: common.position.local
  common.position.abs_rel:
    - match: (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
  common.position.local:
    - match: (\^)(\-?\d*\.?\d+)? (\^)(\-?\d*\.?\d+)? (\^)(\-?\d*\.?\d+)?
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
  common.quotable_string:
    - include: common.quoted_string
    - include: common.unquoted_string
  common.quoted_string:
    - include: common.double_quoted_string
    - include: common.single_quoted_string
  common.resource_id:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
  common.resource_location:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
  common.single_quoted_string:
    - match: (\')
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\')
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: common.single_quoted_string.content
  common.single_quoted_string.content:
    - match: '[^\\\''\n]'
      scope: string._.string.mcfunction
    - match: '\\[^\n]'
      scope: constant.character.escape._.string_escape.mcfunction
    - match: ((\\))
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  common.taggable_resource_location:
    - include: common.tagged_resource_location
    - include: common.resource_location
  common.tagged_resource_location:
    - match: '(\#)(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)'
      captures:
        1: entity.name.function._.hash.tagged_resource_location.mcfunction
        2: entity.name.function._.namespace.tagged_resource_location.mcfunction
        3: entity.name.function._.colon.tagged_resource_location.mcfunction
        4: entity.name.function._.path.tagged_resource_location.mcfunction
        5: entity.name.function._.path.tagged_resource_location.mcfunction
  common.trailing_whitespace:
    - match: '[ \t]*'
      push:
        - meta_scope: meta._.trailing_whitespace.common.mcfunction
        - match: (?=\n)
          pop: true
        - match: ((\S))
          captures:
            1: invalid.illegal._.invalid.mcfunction
            2: markup.underline._.underline.mcfunction
  common.unquoted_string:
    - match: '([\w\.\-\+]+)'
      scope: string._.word.mcfunction
  error.bad_syntax:
    - match: ((.*))$
      scope: meta._.bad_syntax.error.mcfunction
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  error.block:
    - match: '(([^\n\{\}\[\]\"\'']+))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
    - include: error.block_value
  error.block_value:
    - include: error.dict
    - include: error.list
    - include: error.quoted_string
  error.command_line:
    - match: ((.*))$
      scope: meta._.unknown_command.mcfunction
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  error.compound_value:
    - include: error.block_value
    - match: '(([^\n\}\,]))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  error.dict:
    - match: '((\{))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
      push:
        - match: '((?=\n)|(\}))'
          captures:
            1: invalid.illegal._.invalid.mcfunction
            2: markup.underline._.underline.mcfunction
          pop: true
        - include: error.block
  error.double_quoted_string:
    - match: ((\"))
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
      push:
        - match: ((?=\n)|(\"))
          captures:
            1: invalid.illegal._.invalid.mcfunction
            2: markup.underline._.underline.mcfunction
          pop: true
        - include: error.double_quoted_string.content
  error.double_quoted_string.content:
    - match: '(([^\\\"\n]))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
    - match: '((\\[^\n]))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
    - match: ((\\))
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  error.invalid_node:
    - match: ((.*))$
      scope: meta._.invalid_node.error.mcfunction
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  error.list:
    - match: '((\[))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
      push:
        - match: '((?=\n)|(\]))'
          captures:
            1: invalid.illegal._.invalid.mcfunction
            2: markup.underline._.underline.mcfunction
          pop: true
        - include: error.block
  error.list_value:
    - include: error.block_value
    - match: '(([^\n\]\,]))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  error.quoted_string:
    - include: error.double_quoted_string
    - include: error.single_quoted_string
  error.single_quoted_string:
    - match: ((\'))
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
      push:
        - match: ((?=\n)|(\'))
          captures:
            1: invalid.illegal._.invalid.mcfunction
            2: markup.underline._.underline.mcfunction
          pop: true
        - include: error.single_quoted_string.content
  error.single_quoted_string.content:
    - match: '(([^\\\''\n]))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
    - match: '((\\[^\n]))'
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
    - match: ((\\))
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  error.unknown_parser:
    - match: ((.*))$
      scope: meta._.unknown_parser.error.mcfunction
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  error.unmatched_child:
    - match: ((.*))$
      scope: meta._.unmatched_child.error.mcfunction
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
  generated.command.data:
    - match: (data) (?=\S)
      captures:
        1: keyword.control._.command.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data
  generated.command.data.get:
    - match: (get) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get
  generated.command.data.get.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.block
  generated.command.data.get.block.targetPos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.block.targetPos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.block.targetPos
  generated.command.data.get.block.targetPos.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.get.block.targetPos.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.get.block.targetPos.path.scale:
    - match: (\-?\d*\.?\d+)( |(?=\n))
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.block.targetPos.path.scale
  generated.command.data.get.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.entity
  generated.command.data.get.entity.target:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.entity.target
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.entity.target
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.entity.target
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.get.entity.target
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.get.entity.target.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.get.entity.target.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.get.entity.target.path.scale:
    - match: (\-?\d*\.?\d+)( |(?=\n))
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.entity.target.path.scale
  generated.command.data.get.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.storage
  generated.command.data.get.storage.target:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.storage.target
  generated.command.data.get.storage.target.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.get.storage.target.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.get.storage.target.path.scale:
    - match: (\-?\d*\.?\d+)( |(?=\n))
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.get.storage.target.path.scale
  generated.command.data.merge:
    - match: (merge) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge
  generated.command.data.merge.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.block
  generated.command.data.merge.block.targetPos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.block.targetPos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.block.targetPos
  generated.command.data.merge.block.targetPos.nbt:
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.merge.block.targetPos.nbt
        - include: nbt_compound.content
        - include: error.bad_syntax
  generated.command.data.merge.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.entity
  generated.command.data.merge.entity.target:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.entity.target
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.entity.target
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.entity.target
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.merge.entity.target
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.merge.entity.target.nbt:
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.merge.entity.target.nbt
        - include: nbt_compound.content
        - include: error.bad_syntax
  generated.command.data.merge.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.storage
  generated.command.data.merge.storage.target:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.merge.storage.target
  generated.command.data.merge.storage.target.nbt:
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.merge.storage.target.nbt
        - include: nbt_compound.content
        - include: error.bad_syntax
  generated.command.data.modify:
    - match: (modify) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify
  generated.command.data.modify.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block
  generated.command.data.modify.block.targetPos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos
  generated.command.data.modify.block.targetPos.targetPath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.append:
    - match: (append) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append
  generated.command.data.modify.block.targetPos.targetPath.append.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from
  generated.command.data.modify.block.targetPos.targetPath.append.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.block
  generated.command.data.modify.block.targetPos.targetPath.append.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.block.sourcePos
  generated.command.data.modify.block.targetPos.targetPath.append.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.append.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.entity
  generated.command.data.modify.block.targetPos.targetPath.append.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.append.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.append.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.storage
  generated.command.data.modify.block.targetPos.targetPath.append.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.storage.source
  generated.command.data.modify.block.targetPos.targetPath.append.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.append.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.append.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.value
  generated.command.data.modify.block.targetPos.targetPath.append.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.append.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.append.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.append.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.insert:
    - match: (insert) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert
  generated.command.data.modify.block.targetPos.targetPath.insert.index:
    - match: (\-?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.block
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.storage
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.storage.source
  generated.command.data.modify.block.targetPos.targetPath.insert.index.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.insert.index.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.value
  generated.command.data.modify.block.targetPos.targetPath.insert.index.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.insert.index.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.merge:
    - match: (merge) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge
  generated.command.data.modify.block.targetPos.targetPath.merge.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from
  generated.command.data.modify.block.targetPos.targetPath.merge.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.block
  generated.command.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos
  generated.command.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.merge.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity
  generated.command.data.modify.block.targetPos.targetPath.merge.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.merge.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.merge.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.storage
  generated.command.data.modify.block.targetPos.targetPath.merge.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.storage.source
  generated.command.data.modify.block.targetPos.targetPath.merge.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.merge.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.merge.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.value
  generated.command.data.modify.block.targetPos.targetPath.merge.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.merge.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.merge.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.merge.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.prepend:
    - match: (prepend) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend
  generated.command.data.modify.block.targetPos.targetPath.prepend.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.block
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.storage
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.storage.source
  generated.command.data.modify.block.targetPos.targetPath.prepend.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.prepend.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.value
  generated.command.data.modify.block.targetPos.targetPath.prepend.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.prepend.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.set:
    - match: (set) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set
  generated.command.data.modify.block.targetPos.targetPath.set.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from
  generated.command.data.modify.block.targetPos.targetPath.set.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.block
  generated.command.data.modify.block.targetPos.targetPath.set.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.block.sourcePos
  generated.command.data.modify.block.targetPos.targetPath.set.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.set.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.entity
  generated.command.data.modify.block.targetPos.targetPath.set.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.set.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.set.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.storage
  generated.command.data.modify.block.targetPos.targetPath.set.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.storage.source
  generated.command.data.modify.block.targetPos.targetPath.set.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.set.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.block.targetPos.targetPath.set.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.value
  generated.command.data.modify.block.targetPos.targetPath.set.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.block.targetPos.targetPath.set.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.set.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.block.targetPos.targetPath.set.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity
  generated.command.data.modify.entity.target:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.append:
    - match: (append) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append
  generated.command.data.modify.entity.target.targetPath.append.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from
  generated.command.data.modify.entity.target.targetPath.append.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.block
  generated.command.data.modify.entity.target.targetPath.append.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.block.sourcePos
  generated.command.data.modify.entity.target.targetPath.append.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.append.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.append.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.entity
  generated.command.data.modify.entity.target.targetPath.append.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.append.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.append.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.append.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.append.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.storage
  generated.command.data.modify.entity.target.targetPath.append.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.from.storage.source
  generated.command.data.modify.entity.target.targetPath.append.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.append.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.append.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.value
  generated.command.data.modify.entity.target.targetPath.append.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.append.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.append.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.append.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.insert:
    - match: (insert) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert
  generated.command.data.modify.entity.target.targetPath.insert.index:
    - match: (\-?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index
  generated.command.data.modify.entity.target.targetPath.insert.index.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from
  generated.command.data.modify.entity.target.targetPath.insert.index.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.block
  generated.command.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos
  generated.command.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.insert.index.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity
  generated.command.data.modify.entity.target.targetPath.insert.index.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.insert.index.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.insert.index.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.storage
  generated.command.data.modify.entity.target.targetPath.insert.index.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.storage.source
  generated.command.data.modify.entity.target.targetPath.insert.index.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.insert.index.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.insert.index.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.value
  generated.command.data.modify.entity.target.targetPath.insert.index.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.insert.index.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.insert.index.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.insert.index.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.merge:
    - match: (merge) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge
  generated.command.data.modify.entity.target.targetPath.merge.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from
  generated.command.data.modify.entity.target.targetPath.merge.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.block
  generated.command.data.modify.entity.target.targetPath.merge.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.block.sourcePos
  generated.command.data.modify.entity.target.targetPath.merge.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.merge.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.merge.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.entity
  generated.command.data.modify.entity.target.targetPath.merge.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.merge.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.merge.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.merge.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.merge.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.storage
  generated.command.data.modify.entity.target.targetPath.merge.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.from.storage.source
  generated.command.data.modify.entity.target.targetPath.merge.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.merge.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.merge.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.value
  generated.command.data.modify.entity.target.targetPath.merge.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.merge.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.merge.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.merge.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.prepend:
    - match: (prepend) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend
  generated.command.data.modify.entity.target.targetPath.prepend.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from
  generated.command.data.modify.entity.target.targetPath.prepend.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.block
  generated.command.data.modify.entity.target.targetPath.prepend.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.block.sourcePos
  generated.command.data.modify.entity.target.targetPath.prepend.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.prepend.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.entity
  generated.command.data.modify.entity.target.targetPath.prepend.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.prepend.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.prepend.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.storage
  generated.command.data.modify.entity.target.targetPath.prepend.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.storage.source
  generated.command.data.modify.entity.target.targetPath.prepend.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.prepend.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.prepend.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.value
  generated.command.data.modify.entity.target.targetPath.prepend.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.prepend.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.prepend.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.prepend.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.set:
    - match: (set) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set
  generated.command.data.modify.entity.target.targetPath.set.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from
  generated.command.data.modify.entity.target.targetPath.set.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.block
  generated.command.data.modify.entity.target.targetPath.set.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.block.sourcePos
  generated.command.data.modify.entity.target.targetPath.set.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.set.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.set.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.entity
  generated.command.data.modify.entity.target.targetPath.set.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.set.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.set.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.set.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.set.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.storage
  generated.command.data.modify.entity.target.targetPath.set.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.from.storage.source
  generated.command.data.modify.entity.target.targetPath.set.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.set.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.entity.target.targetPath.set.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.value
  generated.command.data.modify.entity.target.targetPath.set.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.entity.target.targetPath.set.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.set.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.entity.target.targetPath.set.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage
  generated.command.data.modify.storage.target:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target
  generated.command.data.modify.storage.target.targetPath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.append:
    - match: (append) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append
  generated.command.data.modify.storage.target.targetPath.append.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from
  generated.command.data.modify.storage.target.targetPath.append.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.block
  generated.command.data.modify.storage.target.targetPath.append.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.block.sourcePos
  generated.command.data.modify.storage.target.targetPath.append.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.append.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.append.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.entity
  generated.command.data.modify.storage.target.targetPath.append.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.append.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.append.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.append.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.append.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.storage
  generated.command.data.modify.storage.target.targetPath.append.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.from.storage.source
  generated.command.data.modify.storage.target.targetPath.append.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.append.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.append.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.value
  generated.command.data.modify.storage.target.targetPath.append.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.append.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.append.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.append.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.insert:
    - match: (insert) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert
  generated.command.data.modify.storage.target.targetPath.insert.index:
    - match: (\-?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index
  generated.command.data.modify.storage.target.targetPath.insert.index.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from
  generated.command.data.modify.storage.target.targetPath.insert.index.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.block
  generated.command.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos
  generated.command.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.insert.index.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity
  generated.command.data.modify.storage.target.targetPath.insert.index.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.insert.index.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.insert.index.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.storage
  generated.command.data.modify.storage.target.targetPath.insert.index.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.storage.source
  generated.command.data.modify.storage.target.targetPath.insert.index.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.insert.index.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.insert.index.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.value
  generated.command.data.modify.storage.target.targetPath.insert.index.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.insert.index.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.insert.index.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.insert.index.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.merge:
    - match: (merge) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge
  generated.command.data.modify.storage.target.targetPath.merge.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from
  generated.command.data.modify.storage.target.targetPath.merge.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.block
  generated.command.data.modify.storage.target.targetPath.merge.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.block.sourcePos
  generated.command.data.modify.storage.target.targetPath.merge.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.merge.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.merge.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.entity
  generated.command.data.modify.storage.target.targetPath.merge.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.merge.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.merge.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.merge.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.merge.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.storage
  generated.command.data.modify.storage.target.targetPath.merge.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.from.storage.source
  generated.command.data.modify.storage.target.targetPath.merge.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.merge.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.merge.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.value
  generated.command.data.modify.storage.target.targetPath.merge.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.merge.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.merge.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.merge.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.prepend:
    - match: (prepend) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend
  generated.command.data.modify.storage.target.targetPath.prepend.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from
  generated.command.data.modify.storage.target.targetPath.prepend.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.block
  generated.command.data.modify.storage.target.targetPath.prepend.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.block.sourcePos
  generated.command.data.modify.storage.target.targetPath.prepend.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.prepend.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.entity
  generated.command.data.modify.storage.target.targetPath.prepend.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.prepend.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.prepend.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.storage
  generated.command.data.modify.storage.target.targetPath.prepend.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.storage.source
  generated.command.data.modify.storage.target.targetPath.prepend.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.prepend.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.prepend.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.value
  generated.command.data.modify.storage.target.targetPath.prepend.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.prepend.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.prepend.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.prepend.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.set:
    - match: (set) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set
  generated.command.data.modify.storage.target.targetPath.set.from:
    - match: (from) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from
  generated.command.data.modify.storage.target.targetPath.set.from.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.block
  generated.command.data.modify.storage.target.targetPath.set.from.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+))( |(?=\n))
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)?( |(?=\n))
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.block.sourcePos
  generated.command.data.modify.storage.target.targetPath.set.from.block.sourcePos.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.set.from.block.sourcePos.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.set.from.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.entity
  generated.command.data.modify.storage.target.targetPath.set.from.entity.source:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.entity.source
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.set.from.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.set.from.entity.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.set.from.entity.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.set.from.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.storage
  generated.command.data.modify.storage.target.targetPath.set.from.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.from.storage.source
  generated.command.data.modify.storage.target.targetPath.set.from.storage.source.sourcePath:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.set.from.storage.source.sourcePath
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.modify.storage.target.targetPath.set.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.value
  generated.command.data.modify.storage.target.targetPath.set.value.value:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.modify.storage.target.targetPath.set.value.value
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\})|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.set.value.value
        - include: nbt_compound.content
        - include: error.bad_syntax
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])|(?=\n)( |(?=\n))'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.modify.storage.target.targetPath.set.value.value
        - include: nbt_list.content
        - include: error.bad_syntax
  generated.command.data.remove:
    - match: (remove) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove
  generated.command.data.remove.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.block
  generated.command.data.remove.block.targetPos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.block.targetPos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.block.targetPos
  generated.command.data.remove.block.targetPos.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.remove.block.targetPos.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.remove.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.entity
  generated.command.data.remove.entity.target:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.entity.target
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.entity.target
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.entity.target
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.remove.entity.target
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.data.remove.entity.target.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.remove.entity.target.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.data.remove.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.storage
  generated.command.data.remove.storage.target:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.data.remove.storage.target
  generated.command.data.remove.storage.target.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.data.remove.storage.target.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.effect:
    - match: (effect) (?=\S)
      captures:
        1: keyword.control._.command.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect
  generated.command.effect.clear:
    - match: (clear)( |(?=\n))
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.clear
  generated.command.effect.clear.targets:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.clear.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.clear.targets
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.clear.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.effect.clear.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.effect.clear.targets.effect:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.clear.targets.effect
  generated.command.effect.give:
    - match: (give) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.give
  generated.command.effect.give.targets:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.give.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.give.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.give.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.effect.give.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.effect.give.targets.effect:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.give.targets.effect
  generated.command.effect.give.targets.effect.seconds:
    - match: '(0*[1-9]\d*)( |(?=\n))'
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.give.targets.effect.seconds
  generated.command.effect.give.targets.effect.seconds.amplifier:
    - match: (\d+)( |(?=\n))
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.give.targets.effect.seconds.amplifier
  generated.command.effect.give.targets.effect.seconds.amplifier.hideParticles:
    - match: (true|false)( |(?=\n))
      captures:
        1: constant.numeric._.boolean.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.effect.give.targets.effect.seconds.amplifier.hideParticles
  generated.command.execute:
    - match: (execute) (?=\S)
      captures:
        1: keyword.control._.command.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute
  generated.command.execute.align:
    - match: (align) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.align
  generated.command.execute.align.axes:
    - match: (x|y|z|xy|xz|yz|xyz) (?=\S)
      captures:
        1: constant.numeric._.swizzle.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.align.axes
  generated.command.execute.anchored:
    - match: (anchored) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.anchored
  generated.command.execute.anchored.anchor:
    - match: (eyes|feet) (?=\S)
      captures:
        1: constant.numeric._.entity_anchor.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.anchored.anchor
  generated.command.execute.as:
    - match: (as) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.as
  generated.command.execute.as.targets:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.as.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.as.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.as.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.as.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.at:
    - match: (at) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.at
  generated.command.execute.at.targets:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.at.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.at.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.at.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.at.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.facing:
    - match: (facing) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.facing
  generated.command.execute.facing.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.facing.entity
  generated.command.execute.facing.entity.targets:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.facing.entity.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.facing.entity.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.facing.entity.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.facing.entity.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.facing.entity.targets.anchor:
    - match: (eyes|feet) (?=\S)
      captures:
        1: constant.numeric._.entity_anchor.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.facing.entity.targets.anchor
  generated.command.execute.facing.pos:
    - match: (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.facing.pos
    - match: (\^)(\-?\d*\.?\d+)? (\^)(\-?\d*\.?\d+)? (\^)(\-?\d*\.?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.facing.pos
  generated.command.execute.if:
    - match: (if) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if
  generated.command.execute.if.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.block
  generated.command.execute.if.block.pos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.block.pos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.block.pos
  generated.command.execute.if.block.pos.block:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.block.pos.block
    - match: '(\#)(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.hash.tagged_resource_location.mcfunction
        2: entity.name.function._.namespace.tagged_resource_location.mcfunction
        3: entity.name.function._.colon.tagged_resource_location.mcfunction
        4: entity.name.function._.path.tagged_resource_location.mcfunction
        5: entity.name.function._.path.tagged_resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.block.pos.block
  generated.command.execute.if.blocks:
    - match: (blocks) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks
  generated.command.execute.if.blocks.start:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks.start
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks.start
  generated.command.execute.if.blocks.start.end:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks.start.end
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks.start.end
  generated.command.execute.if.blocks.start.end.destination:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks.start.end.destination
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks.start.end.destination
  generated.command.execute.if.blocks.start.end.destination.all:
    - match: (all)( |(?=\n))
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks.start.end.destination.all
  generated.command.execute.if.blocks.start.end.destination.masked:
    - match: (masked)( |(?=\n))
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.blocks.start.end.destination.masked
  generated.command.execute.if.data:
    - match: (data) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data
  generated.command.execute.if.data.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.block
  generated.command.execute.if.data.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.block.sourcePos
  generated.command.execute.if.data.block.sourcePos.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.data.block.sourcePos.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.if.data.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.entity
  generated.command.execute.if.data.entity.source:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.entity.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.data.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.if.data.entity.source.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.data.entity.source.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.if.data.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.storage
  generated.command.execute.if.data.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.data.storage.source
  generated.command.execute.if.data.storage.source.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.data.storage.source.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.if.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.entity
  generated.command.execute.if.entity.entities:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.entity.entities
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.entity.entities
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.entity.entities
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.entity.entities
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.if.predicate:
    - match: (predicate) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.predicate
  generated.command.execute.if.predicate.predicate:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.predicate.predicate
  generated.command.execute.if.score:
    - match: (score) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score
  generated.command.execute.if.score.target:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.score.target
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.if.score.target.targetObjective:
    - match: '([\w\.\-\+]+) (?=\S)'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective
  generated.command.execute.if.score.target.targetObjective.<:
    - match: (<) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<
  generated.command.execute.if.score.target.targetObjective.<.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.score.target.targetObjective.<.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.if.score.target.targetObjective.<.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<.source.sourceObjective
  generated.command.execute.if.score.target.targetObjective.<=:
    - match: (<=) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<=
  generated.command.execute.if.score.target.targetObjective.<=.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<=.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<=.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<=.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<=.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<=.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.score.target.targetObjective.<=.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.if.score.target.targetObjective.<=.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.<=.source.sourceObjective
  generated.command.execute.if.score.target.targetObjective.=:
    - match: (=) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.=
  generated.command.execute.if.score.target.targetObjective.=.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.=.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.=.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.=.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.=.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.=.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.score.target.targetObjective.=.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.if.score.target.targetObjective.=.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.=.source.sourceObjective
  generated.command.execute.if.score.target.targetObjective.>:
    - match: (>) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>
  generated.command.execute.if.score.target.targetObjective.>.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.score.target.targetObjective.>.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.if.score.target.targetObjective.>.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>.source.sourceObjective
  generated.command.execute.if.score.target.targetObjective.>=:
    - match: (>=) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>=
  generated.command.execute.if.score.target.targetObjective.>=.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>=.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>=.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>=.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>=.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>=.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.if.score.target.targetObjective.>=.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.if.score.target.targetObjective.>=.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.>=.source.sourceObjective
  generated.command.execute.if.score.target.targetObjective.matches:
    - match: (matches) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.matches
  generated.command.execute.if.score.target.targetObjective.matches.range:
    - match: (\-?\d+)(\.\.)(\-?\d+)?( |(?=\n))
      captures:
        1: constant.numeric._.minimum.range.mcfunction
        2: keyword.control._.ellipsis.range.mcfunction
        3: constant.numeric._.maximum.range.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.matches.range
    - match: (\-?\d+)?(\.\.)(\-?\d+)( |(?=\n))
      captures:
        1: constant.numeric._.minimum.range.mcfunction
        2: keyword.control._.ellipsis.range.mcfunction
        3: constant.numeric._.maximum.range.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.matches.range
    - match: (\-?\d+)( |(?=\n))
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.if.score.target.targetObjective.matches.range
  generated.command.execute.in:
    - match: (in) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.in
  generated.command.execute.in.dimension:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.in.dimension
  generated.command.execute.positioned:
    - match: (positioned) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.positioned
  generated.command.execute.positioned.as:
    - match: (as) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.positioned.as
  generated.command.execute.positioned.as.targets:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.positioned.as.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.positioned.as.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.positioned.as.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.positioned.as.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.positioned.pos:
    - match: (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.positioned.pos
    - match: (\^)(\-?\d*\.?\d+)? (\^)(\-?\d*\.?\d+)? (\^)(\-?\d*\.?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.positioned.pos
  generated.command.execute.rotated:
    - match: (rotated) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.rotated
  generated.command.execute.rotated.as:
    - match: (as) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.rotated.as
  generated.command.execute.rotated.as.targets:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.rotated.as.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.rotated.as.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.rotated.as.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.rotated.as.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.rotated.rot:
    - match: (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.rotated.rot
  generated.command.execute.run:
    - match: (run) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.run
  generated.command.execute.store:
    - match: (store) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store
  generated.command.execute.store.result:
    - match: (result) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result
  generated.command.execute.store.result.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block
  generated.command.execute.store.result.block.targetPos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos
  generated.command.execute.store.result.block.targetPos.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.result.block.targetPos.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.store.result.block.targetPos.path.byte:
    - match: (byte) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.byte
  generated.command.execute.store.result.block.targetPos.path.byte.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.byte.scale
  generated.command.execute.store.result.block.targetPos.path.double:
    - match: (double) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.double
  generated.command.execute.store.result.block.targetPos.path.double.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.double.scale
  generated.command.execute.store.result.block.targetPos.path.float:
    - match: (float) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.float
  generated.command.execute.store.result.block.targetPos.path.float.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.float.scale
  generated.command.execute.store.result.block.targetPos.path.int:
    - match: (int) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.int
  generated.command.execute.store.result.block.targetPos.path.int.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.int.scale
  generated.command.execute.store.result.block.targetPos.path.long:
    - match: (long) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.long
  generated.command.execute.store.result.block.targetPos.path.long.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.long.scale
  generated.command.execute.store.result.block.targetPos.path.short:
    - match: (short) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.short
  generated.command.execute.store.result.block.targetPos.path.short.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.block.targetPos.path.short.scale
  generated.command.execute.store.result.bossbar:
    - match: (bossbar) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.bossbar
  generated.command.execute.store.result.bossbar.id:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.bossbar.id
  generated.command.execute.store.result.bossbar.id.max:
    - match: (max) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.bossbar.id.max
  generated.command.execute.store.result.bossbar.id.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.bossbar.id.value
  generated.command.execute.store.result.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity
  generated.command.execute.store.result.entity.target:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.result.entity.target
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.store.result.entity.target.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.result.entity.target.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.store.result.entity.target.path.byte:
    - match: (byte) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.byte
  generated.command.execute.store.result.entity.target.path.byte.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.byte.scale
  generated.command.execute.store.result.entity.target.path.double:
    - match: (double) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.double
  generated.command.execute.store.result.entity.target.path.double.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.double.scale
  generated.command.execute.store.result.entity.target.path.float:
    - match: (float) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.float
  generated.command.execute.store.result.entity.target.path.float.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.float.scale
  generated.command.execute.store.result.entity.target.path.int:
    - match: (int) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.int
  generated.command.execute.store.result.entity.target.path.int.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.int.scale
  generated.command.execute.store.result.entity.target.path.long:
    - match: (long) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.long
  generated.command.execute.store.result.entity.target.path.long.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.long.scale
  generated.command.execute.store.result.entity.target.path.short:
    - match: (short) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.short
  generated.command.execute.store.result.entity.target.path.short.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.entity.target.path.short.scale
  generated.command.execute.store.result.score:
    - match: (score) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.score
  generated.command.execute.store.result.score.targets:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.score.targets
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.score.targets
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.score.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.score.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.score.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.result.score.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.store.result.score.targets.objective:
    - match: '([\w\.\-\+]+) (?=\S)'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.score.targets.objective
  generated.command.execute.store.result.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage
  generated.command.execute.store.result.storage.target:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target
  generated.command.execute.store.result.storage.target.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.result.storage.target.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.store.result.storage.target.path.byte:
    - match: (byte) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.byte
  generated.command.execute.store.result.storage.target.path.byte.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.byte.scale
  generated.command.execute.store.result.storage.target.path.double:
    - match: (double) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.double
  generated.command.execute.store.result.storage.target.path.double.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.double.scale
  generated.command.execute.store.result.storage.target.path.float:
    - match: (float) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.float
  generated.command.execute.store.result.storage.target.path.float.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.float.scale
  generated.command.execute.store.result.storage.target.path.int:
    - match: (int) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.int
  generated.command.execute.store.result.storage.target.path.int.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.int.scale
  generated.command.execute.store.result.storage.target.path.long:
    - match: (long) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.long
  generated.command.execute.store.result.storage.target.path.long.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.long.scale
  generated.command.execute.store.result.storage.target.path.short:
    - match: (short) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.short
  generated.command.execute.store.result.storage.target.path.short.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.result.storage.target.path.short.scale
  generated.command.execute.store.success:
    - match: (success) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success
  generated.command.execute.store.success.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block
  generated.command.execute.store.success.block.targetPos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos
  generated.command.execute.store.success.block.targetPos.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.success.block.targetPos.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.store.success.block.targetPos.path.byte:
    - match: (byte) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.byte
  generated.command.execute.store.success.block.targetPos.path.byte.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.byte.scale
  generated.command.execute.store.success.block.targetPos.path.double:
    - match: (double) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.double
  generated.command.execute.store.success.block.targetPos.path.double.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.double.scale
  generated.command.execute.store.success.block.targetPos.path.float:
    - match: (float) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.float
  generated.command.execute.store.success.block.targetPos.path.float.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.float.scale
  generated.command.execute.store.success.block.targetPos.path.int:
    - match: (int) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.int
  generated.command.execute.store.success.block.targetPos.path.int.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.int.scale
  generated.command.execute.store.success.block.targetPos.path.long:
    - match: (long) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.long
  generated.command.execute.store.success.block.targetPos.path.long.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.long.scale
  generated.command.execute.store.success.block.targetPos.path.short:
    - match: (short) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.short
  generated.command.execute.store.success.block.targetPos.path.short.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.block.targetPos.path.short.scale
  generated.command.execute.store.success.bossbar:
    - match: (bossbar) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.bossbar
  generated.command.execute.store.success.bossbar.id:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.bossbar.id
  generated.command.execute.store.success.bossbar.id.max:
    - match: (max) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.bossbar.id.max
  generated.command.execute.store.success.bossbar.id.value:
    - match: (value) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.bossbar.id.value
  generated.command.execute.store.success.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity
  generated.command.execute.store.success.entity.target:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.success.entity.target
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.store.success.entity.target.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.success.entity.target.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.store.success.entity.target.path.byte:
    - match: (byte) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.byte
  generated.command.execute.store.success.entity.target.path.byte.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.byte.scale
  generated.command.execute.store.success.entity.target.path.double:
    - match: (double) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.double
  generated.command.execute.store.success.entity.target.path.double.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.double.scale
  generated.command.execute.store.success.entity.target.path.float:
    - match: (float) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.float
  generated.command.execute.store.success.entity.target.path.float.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.float.scale
  generated.command.execute.store.success.entity.target.path.int:
    - match: (int) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.int
  generated.command.execute.store.success.entity.target.path.int.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.int.scale
  generated.command.execute.store.success.entity.target.path.long:
    - match: (long) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.long
  generated.command.execute.store.success.entity.target.path.long.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.long.scale
  generated.command.execute.store.success.entity.target.path.short:
    - match: (short) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.short
  generated.command.execute.store.success.entity.target.path.short.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.entity.target.path.short.scale
  generated.command.execute.store.success.score:
    - match: (score) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.score
  generated.command.execute.store.success.score.targets:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.score.targets
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.score.targets
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.score.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.score.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.score.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.success.score.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.store.success.score.targets.objective:
    - match: '([\w\.\-\+]+) (?=\S)'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.score.targets.objective
  generated.command.execute.store.success.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage
  generated.command.execute.store.success.storage.target:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target
  generated.command.execute.store.success.storage.target.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n) (?=\S)
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.store.success.storage.target.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.store.success.storage.target.path.byte:
    - match: (byte) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.byte
  generated.command.execute.store.success.storage.target.path.byte.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.byte.scale
  generated.command.execute.store.success.storage.target.path.double:
    - match: (double) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.double
  generated.command.execute.store.success.storage.target.path.double.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.double.scale
  generated.command.execute.store.success.storage.target.path.float:
    - match: (float) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.float
  generated.command.execute.store.success.storage.target.path.float.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.float.scale
  generated.command.execute.store.success.storage.target.path.int:
    - match: (int) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.int
  generated.command.execute.store.success.storage.target.path.int.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.int.scale
  generated.command.execute.store.success.storage.target.path.long:
    - match: (long) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.long
  generated.command.execute.store.success.storage.target.path.long.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.long.scale
  generated.command.execute.store.success.storage.target.path.short:
    - match: (short) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.short
  generated.command.execute.store.success.storage.target.path.short.scale:
    - match: (\-?\d*\.?\d+) (?=\S)
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.store.success.storage.target.path.short.scale
  generated.command.execute.unless:
    - match: (unless) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless
  generated.command.execute.unless.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.block
  generated.command.execute.unless.block.pos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.block.pos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.block.pos
  generated.command.execute.unless.block.pos.block:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.block.pos.block
    - match: '(\#)(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.hash.tagged_resource_location.mcfunction
        2: entity.name.function._.namespace.tagged_resource_location.mcfunction
        3: entity.name.function._.colon.tagged_resource_location.mcfunction
        4: entity.name.function._.path.tagged_resource_location.mcfunction
        5: entity.name.function._.path.tagged_resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.block.pos.block
  generated.command.execute.unless.blocks:
    - match: (blocks) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks
  generated.command.execute.unless.blocks.start:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks.start
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks.start
  generated.command.execute.unless.blocks.start.end:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks.start.end
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks.start.end
  generated.command.execute.unless.blocks.start.end.destination:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks.start.end.destination
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks.start.end.destination
  generated.command.execute.unless.blocks.start.end.destination.all:
    - match: (all)( |(?=\n))
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks.start.end.destination.all
  generated.command.execute.unless.blocks.start.end.destination.masked:
    - match: (masked)( |(?=\n))
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.blocks.start.end.destination.masked
  generated.command.execute.unless.data:
    - match: (data) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data
  generated.command.execute.unless.data.block:
    - match: (block) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.block
  generated.command.execute.unless.data.block.sourcePos:
    - match: (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?:(\~)(\-?\d+)?|(\-?\d+)) (?=\S)
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.block.sourcePos
    - match: (\^)(\-?\d+)? (\^)(\-?\d+)? (\^)(\-?\d+)? (?=\S)
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.block.sourcePos
  generated.command.execute.unless.data.block.sourcePos.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.data.block.sourcePos.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.unless.data.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.entity
  generated.command.execute.unless.data.entity.source:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.entity.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.entity.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.entity.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.data.entity.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.unless.data.entity.source.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.data.entity.source.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.unless.data.storage:
    - match: (storage) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.storage
  generated.command.execute.unless.data.storage.source:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*) (?=\S)'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.data.storage.source
  generated.command.execute.unless.data.storage.source.path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: (?= |\n)( |(?=\n))
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.data.storage.source.path
        - include: nbt_path.content
        - include: error.bad_syntax
  generated.command.execute.unless.entity:
    - match: (entity) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.entity
  generated.command.execute.unless.entity.entities:
    - match: '(\@[parse])( |(?=\n))'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.entity.entities
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})( |(?=\n))'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.entity.entities
    - match: (\w+)( |(?=\n))
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.entity.entities
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\])( |(?=\n))'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.entity.entities
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.unless.predicate:
    - match: (predicate) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.predicate
  generated.command.execute.unless.predicate.predicate:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.predicate.predicate
  generated.command.execute.unless.score:
    - match: (score) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score
  generated.command.execute.unless.score.target:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.score.target
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.unless.score.target.targetObjective:
    - match: '([\w\.\-\+]+) (?=\S)'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective
  generated.command.execute.unless.score.target.targetObjective.<:
    - match: (<) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<
  generated.command.execute.unless.score.target.targetObjective.<.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.score.target.targetObjective.<.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.unless.score.target.targetObjective.<.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<.source.sourceObjective
  generated.command.execute.unless.score.target.targetObjective.<=:
    - match: (<=) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<=
  generated.command.execute.unless.score.target.targetObjective.<=.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<=.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<=.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<=.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<=.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<=.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.score.target.targetObjective.<=.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.unless.score.target.targetObjective.<=.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.<=.source.sourceObjective
  generated.command.execute.unless.score.target.targetObjective.=:
    - match: (=) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.=
  generated.command.execute.unless.score.target.targetObjective.=.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.=.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.=.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.=.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.=.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.=.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.score.target.targetObjective.=.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.unless.score.target.targetObjective.=.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.=.source.sourceObjective
  generated.command.execute.unless.score.target.targetObjective.>:
    - match: (>) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>
  generated.command.execute.unless.score.target.targetObjective.>.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.score.target.targetObjective.>.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.unless.score.target.targetObjective.>.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>.source.sourceObjective
  generated.command.execute.unless.score.target.targetObjective.>=:
    - match: (>=) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>=
  generated.command.execute.unless.score.target.targetObjective.>=.source:
    - match: (\*) (?=\S)
      captures:
        1: support.class._.all.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>=.source
    - match: '([\w\.\-\#\$\%]+) (?=\S)'
      captures:
        1: support.class._.fakeplayer.score_holder.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>=.source
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>=.source
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>=.source
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>=.source
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.execute.unless.score.target.targetObjective.>=.source
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.execute.unless.score.target.targetObjective.>=.source.sourceObjective:
    - match: '([\w\.\-\+]+)( |(?=\n))'
      captures:
        1: entity.other.attribute-name._.scoreboard_objective.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.>=.source.sourceObjective
  generated.command.execute.unless.score.target.targetObjective.matches:
    - match: (matches) (?=\S)
      captures:
        1: keyword.other._.subcommand.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.matches
  generated.command.execute.unless.score.target.targetObjective.matches.range:
    - match: (\-?\d+)(\.\.)(\-?\d+)?( |(?=\n))
      captures:
        1: constant.numeric._.minimum.range.mcfunction
        2: keyword.control._.ellipsis.range.mcfunction
        3: constant.numeric._.maximum.range.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.matches.range
    - match: (\-?\d+)?(\.\.)(\-?\d+)( |(?=\n))
      captures:
        1: constant.numeric._.minimum.range.mcfunction
        2: keyword.control._.ellipsis.range.mcfunction
        3: constant.numeric._.maximum.range.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.matches.range
    - match: (\-?\d+)( |(?=\n))
      captures:
        1: constant.numeric._.number.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.execute.unless.score.target.targetObjective.matches.range
  generated.command.function:
    - match: (function) (?=\S)
      captures:
        1: keyword.control._.command.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.function
  generated.command.function.name:
    - match: '(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.namespace.resource_location.mcfunction
        2: entity.name.function._.colon.resource_location.mcfunction
        3: entity.name.function._.path.resource_location.mcfunction
        4: entity.name.function._.path.resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.function.name
    - match: '(\#)(?:([a-z0-9_\.\-]+)(\:))?([a-z0-9_\.\-]+)((?:\/?[a-z0-9_\.\-]+)*)( |(?=\n))'
      captures:
        1: entity.name.function._.hash.tagged_resource_location.mcfunction
        2: entity.name.function._.namespace.tagged_resource_location.mcfunction
        3: entity.name.function._.colon.tagged_resource_location.mcfunction
        4: entity.name.function._.path.tagged_resource_location.mcfunction
        5: entity.name.function._.path.tagged_resource_location.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.function.name
  generated.command.say:
    - match: (say) (?=\S)
      captures:
        1: keyword.control._.command.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.say
  generated.command.say.message:
    - include: common.message
  generated.command.tellraw:
    - match: (tellraw) (?=\S)
      captures:
        1: keyword.control._.command.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.tellraw
  generated.command.tellraw.targets:
    - match: '(\@[parse]) (?=\S)'
      captures:
        1: support.class._.base.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.tellraw.targets
    - match: '([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4}) (?=\S)'
      captures:
        1: support.class._.uuid.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.tellraw.targets
    - match: (\w+) (?=\S)
      captures:
        1: support.class._.player_name.target.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - include: generated.commands.tellraw.targets
    - match: '(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: (?=\n)
          pop: true
        - match: '(\]) (?=\S)'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          push:
            - match: (?=\n)
              pop: true
            - include: generated.commands.tellraw.targets
        - include: target_selector.content
        - include: error.bad_syntax
  generated.command.tellraw.targets.message:
    - include: text_component
  generated.commands:
    - include: generated.command.data
    - include: generated.command.effect
    - include: generated.command.execute
    - include: generated.command.function
    - include: generated.command.say
    - include: generated.command.tellraw
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data:
    - include: generated.command.data.get
    - include: generated.command.data.merge
    - include: generated.command.data.modify
    - include: generated.command.data.remove
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get:
    - include: generated.command.data.get.block
    - include: generated.command.data.get.entity
    - include: generated.command.data.get.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.block:
    - include: generated.command.data.get.block.targetPos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.block.targetPos:
    - include: generated.command.data.get.block.targetPos.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.block.targetPos.path:
    - include: generated.command.data.get.block.targetPos.path.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.block.targetPos.path.scale:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.entity:
    - include: generated.command.data.get.entity.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.entity.target:
    - include: generated.command.data.get.entity.target.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.entity.target.path:
    - include: generated.command.data.get.entity.target.path.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.entity.target.path.scale:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.storage:
    - include: generated.command.data.get.storage.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.storage.target:
    - include: generated.command.data.get.storage.target.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.storage.target.path:
    - include: generated.command.data.get.storage.target.path.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.get.storage.target.path.scale:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge:
    - include: generated.command.data.merge.block
    - include: generated.command.data.merge.entity
    - include: generated.command.data.merge.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.block:
    - include: generated.command.data.merge.block.targetPos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.block.targetPos:
    - include: generated.command.data.merge.block.targetPos.nbt
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.block.targetPos.nbt:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.entity:
    - include: generated.command.data.merge.entity.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.entity.target:
    - include: generated.command.data.merge.entity.target.nbt
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.entity.target.nbt:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.storage:
    - include: generated.command.data.merge.storage.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.storage.target:
    - include: generated.command.data.merge.storage.target.nbt
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.merge.storage.target.nbt:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify:
    - include: generated.command.data.modify.block
    - include: generated.command.data.modify.entity
    - include: generated.command.data.modify.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block:
    - include: generated.command.data.modify.block.targetPos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos:
    - include: generated.command.data.modify.block.targetPos.targetPath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath:
    - include: generated.command.data.modify.block.targetPos.targetPath.append
    - include: generated.command.data.modify.block.targetPos.targetPath.insert
    - include: generated.command.data.modify.block.targetPos.targetPath.merge
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend
    - include: generated.command.data.modify.block.targetPos.targetPath.set
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from
    - include: generated.command.data.modify.block.targetPos.targetPath.append.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.block
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.entity
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.block:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.block.sourcePos:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.entity:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.entity.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.storage:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.storage.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.value:
    - include: generated.command.data.modify.block.targetPos.targetPath.append.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.append.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.block
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.entity
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.block:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.storage:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.storage.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.value:
    - include: generated.command.data.modify.block.targetPos.targetPath.insert.index.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.insert.index.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.block
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.entity
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.block:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.storage:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.storage.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.value:
    - include: generated.command.data.modify.block.targetPos.targetPath.merge.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.merge.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.block
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.entity
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.block:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.storage:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.storage.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.value:
    - include: generated.command.data.modify.block.targetPos.targetPath.prepend.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.prepend.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from
    - include: generated.command.data.modify.block.targetPos.targetPath.set.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.block
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.entity
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.block:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.block.sourcePos:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.entity:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.entity.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.storage:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.storage.source:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.value:
    - include: generated.command.data.modify.block.targetPos.targetPath.set.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.block.targetPos.targetPath.set.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity:
    - include: generated.command.data.modify.entity.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target:
    - include: generated.command.data.modify.entity.target.targetPath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath:
    - include: generated.command.data.modify.entity.target.targetPath.append
    - include: generated.command.data.modify.entity.target.targetPath.insert
    - include: generated.command.data.modify.entity.target.targetPath.merge
    - include: generated.command.data.modify.entity.target.targetPath.prepend
    - include: generated.command.data.modify.entity.target.targetPath.set
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append:
    - include: generated.command.data.modify.entity.target.targetPath.append.from
    - include: generated.command.data.modify.entity.target.targetPath.append.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from:
    - include: generated.command.data.modify.entity.target.targetPath.append.from.block
    - include: generated.command.data.modify.entity.target.targetPath.append.from.entity
    - include: generated.command.data.modify.entity.target.targetPath.append.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.block:
    - include: generated.command.data.modify.entity.target.targetPath.append.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.block.sourcePos:
    - include: generated.command.data.modify.entity.target.targetPath.append.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.entity:
    - include: generated.command.data.modify.entity.target.targetPath.append.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.entity.source:
    - include: generated.command.data.modify.entity.target.targetPath.append.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.storage:
    - include: generated.command.data.modify.entity.target.targetPath.append.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.storage.source:
    - include: generated.command.data.modify.entity.target.targetPath.append.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.value:
    - include: generated.command.data.modify.entity.target.targetPath.append.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.append.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.block
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.entity
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.block:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity.source:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.storage:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.storage.source:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.value:
    - include: generated.command.data.modify.entity.target.targetPath.insert.index.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.insert.index.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge:
    - include: generated.command.data.modify.entity.target.targetPath.merge.from
    - include: generated.command.data.modify.entity.target.targetPath.merge.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from:
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.block
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.entity
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.block:
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.block.sourcePos:
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.entity:
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.entity.source:
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.storage:
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.storage.source:
    - include: generated.command.data.modify.entity.target.targetPath.merge.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.value:
    - include: generated.command.data.modify.entity.target.targetPath.merge.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.merge.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from
    - include: generated.command.data.modify.entity.target.targetPath.prepend.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.block
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.entity
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.block:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.block.sourcePos:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.entity:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.entity.source:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.storage:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.storage.source:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.value:
    - include: generated.command.data.modify.entity.target.targetPath.prepend.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.prepend.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set:
    - include: generated.command.data.modify.entity.target.targetPath.set.from
    - include: generated.command.data.modify.entity.target.targetPath.set.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from:
    - include: generated.command.data.modify.entity.target.targetPath.set.from.block
    - include: generated.command.data.modify.entity.target.targetPath.set.from.entity
    - include: generated.command.data.modify.entity.target.targetPath.set.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.block:
    - include: generated.command.data.modify.entity.target.targetPath.set.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.block.sourcePos:
    - include: generated.command.data.modify.entity.target.targetPath.set.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.entity:
    - include: generated.command.data.modify.entity.target.targetPath.set.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.entity.source:
    - include: generated.command.data.modify.entity.target.targetPath.set.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.storage:
    - include: generated.command.data.modify.entity.target.targetPath.set.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.storage.source:
    - include: generated.command.data.modify.entity.target.targetPath.set.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.value:
    - include: generated.command.data.modify.entity.target.targetPath.set.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.entity.target.targetPath.set.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage:
    - include: generated.command.data.modify.storage.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target:
    - include: generated.command.data.modify.storage.target.targetPath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath:
    - include: generated.command.data.modify.storage.target.targetPath.append
    - include: generated.command.data.modify.storage.target.targetPath.insert
    - include: generated.command.data.modify.storage.target.targetPath.merge
    - include: generated.command.data.modify.storage.target.targetPath.prepend
    - include: generated.command.data.modify.storage.target.targetPath.set
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append:
    - include: generated.command.data.modify.storage.target.targetPath.append.from
    - include: generated.command.data.modify.storage.target.targetPath.append.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from:
    - include: generated.command.data.modify.storage.target.targetPath.append.from.block
    - include: generated.command.data.modify.storage.target.targetPath.append.from.entity
    - include: generated.command.data.modify.storage.target.targetPath.append.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.block:
    - include: generated.command.data.modify.storage.target.targetPath.append.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.block.sourcePos:
    - include: generated.command.data.modify.storage.target.targetPath.append.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.entity:
    - include: generated.command.data.modify.storage.target.targetPath.append.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.entity.source:
    - include: generated.command.data.modify.storage.target.targetPath.append.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.storage:
    - include: generated.command.data.modify.storage.target.targetPath.append.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.storage.source:
    - include: generated.command.data.modify.storage.target.targetPath.append.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.value:
    - include: generated.command.data.modify.storage.target.targetPath.append.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.append.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.block
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.entity
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.block:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity.source:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.storage:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.storage.source:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.value:
    - include: generated.command.data.modify.storage.target.targetPath.insert.index.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.insert.index.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge:
    - include: generated.command.data.modify.storage.target.targetPath.merge.from
    - include: generated.command.data.modify.storage.target.targetPath.merge.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from:
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.block
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.entity
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.block:
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.block.sourcePos:
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.entity:
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.entity.source:
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.storage:
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.storage.source:
    - include: generated.command.data.modify.storage.target.targetPath.merge.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.value:
    - include: generated.command.data.modify.storage.target.targetPath.merge.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.merge.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from
    - include: generated.command.data.modify.storage.target.targetPath.prepend.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.block
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.entity
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.block:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.block.sourcePos:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.entity:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.entity.source:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.storage:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.storage.source:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.value:
    - include: generated.command.data.modify.storage.target.targetPath.prepend.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.prepend.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set:
    - include: generated.command.data.modify.storage.target.targetPath.set.from
    - include: generated.command.data.modify.storage.target.targetPath.set.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from:
    - include: generated.command.data.modify.storage.target.targetPath.set.from.block
    - include: generated.command.data.modify.storage.target.targetPath.set.from.entity
    - include: generated.command.data.modify.storage.target.targetPath.set.from.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.block:
    - include: generated.command.data.modify.storage.target.targetPath.set.from.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.block.sourcePos:
    - include: generated.command.data.modify.storage.target.targetPath.set.from.block.sourcePos.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.block.sourcePos.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.entity:
    - include: generated.command.data.modify.storage.target.targetPath.set.from.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.entity.source:
    - include: generated.command.data.modify.storage.target.targetPath.set.from.entity.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.entity.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.storage:
    - include: generated.command.data.modify.storage.target.targetPath.set.from.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.storage.source:
    - include: generated.command.data.modify.storage.target.targetPath.set.from.storage.source.sourcePath
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.from.storage.source.sourcePath:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.value:
    - include: generated.command.data.modify.storage.target.targetPath.set.value.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.modify.storage.target.targetPath.set.value.value:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove:
    - include: generated.command.data.remove.block
    - include: generated.command.data.remove.entity
    - include: generated.command.data.remove.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.block:
    - include: generated.command.data.remove.block.targetPos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.block.targetPos:
    - include: generated.command.data.remove.block.targetPos.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.block.targetPos.path:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.entity:
    - include: generated.command.data.remove.entity.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.entity.target:
    - include: generated.command.data.remove.entity.target.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.entity.target.path:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.storage:
    - include: generated.command.data.remove.storage.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.storage.target:
    - include: generated.command.data.remove.storage.target.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.data.remove.storage.target.path:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect:
    - include: generated.command.effect.clear
    - include: generated.command.effect.give
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.clear:
    - include: generated.command.effect.clear.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.clear.targets:
    - include: generated.command.effect.clear.targets.effect
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.clear.targets.effect:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.give:
    - include: generated.command.effect.give.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.give.targets:
    - include: generated.command.effect.give.targets.effect
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.give.targets.effect:
    - include: generated.command.effect.give.targets.effect.seconds
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.give.targets.effect.seconds:
    - include: generated.command.effect.give.targets.effect.seconds.amplifier
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.give.targets.effect.seconds.amplifier:
    - include: generated.command.effect.give.targets.effect.seconds.amplifier.hideParticles
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.effect.give.targets.effect.seconds.amplifier.hideParticles:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute:
    - include: generated.command.execute.align
    - include: generated.command.execute.anchored
    - include: generated.command.execute.as
    - include: generated.command.execute.at
    - include: generated.command.execute.facing
    - include: generated.command.execute.if
    - include: generated.command.execute.in
    - include: generated.command.execute.positioned
    - include: generated.command.execute.rotated
    - include: generated.command.execute.run
    - include: generated.command.execute.store
    - include: generated.command.execute.unless
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.align:
    - include: generated.command.execute.align.axes
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.align.axes:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.anchored:
    - include: generated.command.execute.anchored.anchor
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.anchored.anchor:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.as:
    - include: generated.command.execute.as.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.as.targets:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.at:
    - include: generated.command.execute.at.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.at.targets:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.facing:
    - include: generated.command.execute.facing.entity
    - include: generated.command.execute.facing.pos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.facing.entity:
    - include: generated.command.execute.facing.entity.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.facing.entity.targets:
    - include: generated.command.execute.facing.entity.targets.anchor
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.facing.entity.targets.anchor:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.facing.pos:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if:
    - include: generated.command.execute.if.block
    - include: generated.command.execute.if.blocks
    - include: generated.command.execute.if.data
    - include: generated.command.execute.if.entity
    - include: generated.command.execute.if.predicate
    - include: generated.command.execute.if.score
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.block:
    - include: generated.command.execute.if.block.pos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.block.pos:
    - include: generated.command.execute.if.block.pos.block
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.block.pos.block:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.blocks:
    - include: generated.command.execute.if.blocks.start
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.blocks.start:
    - include: generated.command.execute.if.blocks.start.end
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.blocks.start.end:
    - include: generated.command.execute.if.blocks.start.end.destination
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.blocks.start.end.destination:
    - include: generated.command.execute.if.blocks.start.end.destination.all
    - include: generated.command.execute.if.blocks.start.end.destination.masked
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.blocks.start.end.destination.all:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.blocks.start.end.destination.masked:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data:
    - include: generated.command.execute.if.data.block
    - include: generated.command.execute.if.data.entity
    - include: generated.command.execute.if.data.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.block:
    - include: generated.command.execute.if.data.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.block.sourcePos:
    - include: generated.command.execute.if.data.block.sourcePos.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.block.sourcePos.path:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.entity:
    - include: generated.command.execute.if.data.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.entity.source:
    - include: generated.command.execute.if.data.entity.source.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.entity.source.path:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.storage:
    - include: generated.command.execute.if.data.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.storage.source:
    - include: generated.command.execute.if.data.storage.source.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.data.storage.source.path:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.entity:
    - include: generated.command.execute.if.entity.entities
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.entity.entities:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.predicate:
    - include: generated.command.execute.if.predicate.predicate
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.predicate.predicate:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score:
    - include: generated.command.execute.if.score.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target:
    - include: generated.command.execute.if.score.target.targetObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective:
    - include: generated.command.execute.if.score.target.targetObjective.<
    - include: generated.command.execute.if.score.target.targetObjective.<=
    - include: generated.command.execute.if.score.target.targetObjective.=
    - include: generated.command.execute.if.score.target.targetObjective.>
    - include: generated.command.execute.if.score.target.targetObjective.>=
    - include: generated.command.execute.if.score.target.targetObjective.matches
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.<:
    - include: generated.command.execute.if.score.target.targetObjective.<.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.<.source:
    - include: generated.command.execute.if.score.target.targetObjective.<.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.<.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.<=:
    - include: generated.command.execute.if.score.target.targetObjective.<=.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.<=.source:
    - include: generated.command.execute.if.score.target.targetObjective.<=.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.<=.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.=:
    - include: generated.command.execute.if.score.target.targetObjective.=.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.=.source:
    - include: generated.command.execute.if.score.target.targetObjective.=.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.=.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.>:
    - include: generated.command.execute.if.score.target.targetObjective.>.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.>.source:
    - include: generated.command.execute.if.score.target.targetObjective.>.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.>.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.>=:
    - include: generated.command.execute.if.score.target.targetObjective.>=.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.>=.source:
    - include: generated.command.execute.if.score.target.targetObjective.>=.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.>=.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.matches:
    - include: generated.command.execute.if.score.target.targetObjective.matches.range
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.if.score.target.targetObjective.matches.range:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.in:
    - include: generated.command.execute.in.dimension
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.in.dimension:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.positioned:
    - include: generated.command.execute.positioned.as
    - include: generated.command.execute.positioned.pos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.positioned.as:
    - include: generated.command.execute.positioned.as.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.positioned.as.targets:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.positioned.pos:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.rotated:
    - include: generated.command.execute.rotated.as
    - include: generated.command.execute.rotated.rot
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.rotated.as:
    - include: generated.command.execute.rotated.as.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.rotated.as.targets:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.rotated.rot:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.run:
    - include: generated.commands
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store:
    - include: generated.command.execute.store.result
    - include: generated.command.execute.store.success
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result:
    - include: generated.command.execute.store.result.block
    - include: generated.command.execute.store.result.bossbar
    - include: generated.command.execute.store.result.entity
    - include: generated.command.execute.store.result.score
    - include: generated.command.execute.store.result.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block:
    - include: generated.command.execute.store.result.block.targetPos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos:
    - include: generated.command.execute.store.result.block.targetPos.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path:
    - include: generated.command.execute.store.result.block.targetPos.path.byte
    - include: generated.command.execute.store.result.block.targetPos.path.double
    - include: generated.command.execute.store.result.block.targetPos.path.float
    - include: generated.command.execute.store.result.block.targetPos.path.int
    - include: generated.command.execute.store.result.block.targetPos.path.long
    - include: generated.command.execute.store.result.block.targetPos.path.short
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.byte:
    - include: generated.command.execute.store.result.block.targetPos.path.byte.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.byte.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.double:
    - include: generated.command.execute.store.result.block.targetPos.path.double.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.double.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.float:
    - include: generated.command.execute.store.result.block.targetPos.path.float.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.float.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.int:
    - include: generated.command.execute.store.result.block.targetPos.path.int.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.int.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.long:
    - include: generated.command.execute.store.result.block.targetPos.path.long.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.long.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.short:
    - include: generated.command.execute.store.result.block.targetPos.path.short.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.block.targetPos.path.short.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.bossbar:
    - include: generated.command.execute.store.result.bossbar.id
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.bossbar.id:
    - include: generated.command.execute.store.result.bossbar.id.max
    - include: generated.command.execute.store.result.bossbar.id.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.bossbar.id.max:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.bossbar.id.value:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity:
    - include: generated.command.execute.store.result.entity.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target:
    - include: generated.command.execute.store.result.entity.target.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path:
    - include: generated.command.execute.store.result.entity.target.path.byte
    - include: generated.command.execute.store.result.entity.target.path.double
    - include: generated.command.execute.store.result.entity.target.path.float
    - include: generated.command.execute.store.result.entity.target.path.int
    - include: generated.command.execute.store.result.entity.target.path.long
    - include: generated.command.execute.store.result.entity.target.path.short
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.byte:
    - include: generated.command.execute.store.result.entity.target.path.byte.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.byte.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.double:
    - include: generated.command.execute.store.result.entity.target.path.double.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.double.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.float:
    - include: generated.command.execute.store.result.entity.target.path.float.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.float.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.int:
    - include: generated.command.execute.store.result.entity.target.path.int.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.int.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.long:
    - include: generated.command.execute.store.result.entity.target.path.long.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.long.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.short:
    - include: generated.command.execute.store.result.entity.target.path.short.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.entity.target.path.short.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.score:
    - include: generated.command.execute.store.result.score.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.score.targets:
    - include: generated.command.execute.store.result.score.targets.objective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.score.targets.objective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage:
    - include: generated.command.execute.store.result.storage.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target:
    - include: generated.command.execute.store.result.storage.target.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path:
    - include: generated.command.execute.store.result.storage.target.path.byte
    - include: generated.command.execute.store.result.storage.target.path.double
    - include: generated.command.execute.store.result.storage.target.path.float
    - include: generated.command.execute.store.result.storage.target.path.int
    - include: generated.command.execute.store.result.storage.target.path.long
    - include: generated.command.execute.store.result.storage.target.path.short
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.byte:
    - include: generated.command.execute.store.result.storage.target.path.byte.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.byte.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.double:
    - include: generated.command.execute.store.result.storage.target.path.double.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.double.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.float:
    - include: generated.command.execute.store.result.storage.target.path.float.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.float.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.int:
    - include: generated.command.execute.store.result.storage.target.path.int.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.int.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.long:
    - include: generated.command.execute.store.result.storage.target.path.long.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.long.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.short:
    - include: generated.command.execute.store.result.storage.target.path.short.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.result.storage.target.path.short.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success:
    - include: generated.command.execute.store.success.block
    - include: generated.command.execute.store.success.bossbar
    - include: generated.command.execute.store.success.entity
    - include: generated.command.execute.store.success.score
    - include: generated.command.execute.store.success.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block:
    - include: generated.command.execute.store.success.block.targetPos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos:
    - include: generated.command.execute.store.success.block.targetPos.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path:
    - include: generated.command.execute.store.success.block.targetPos.path.byte
    - include: generated.command.execute.store.success.block.targetPos.path.double
    - include: generated.command.execute.store.success.block.targetPos.path.float
    - include: generated.command.execute.store.success.block.targetPos.path.int
    - include: generated.command.execute.store.success.block.targetPos.path.long
    - include: generated.command.execute.store.success.block.targetPos.path.short
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.byte:
    - include: generated.command.execute.store.success.block.targetPos.path.byte.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.byte.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.double:
    - include: generated.command.execute.store.success.block.targetPos.path.double.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.double.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.float:
    - include: generated.command.execute.store.success.block.targetPos.path.float.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.float.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.int:
    - include: generated.command.execute.store.success.block.targetPos.path.int.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.int.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.long:
    - include: generated.command.execute.store.success.block.targetPos.path.long.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.long.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.short:
    - include: generated.command.execute.store.success.block.targetPos.path.short.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.block.targetPos.path.short.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.bossbar:
    - include: generated.command.execute.store.success.bossbar.id
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.bossbar.id:
    - include: generated.command.execute.store.success.bossbar.id.max
    - include: generated.command.execute.store.success.bossbar.id.value
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.bossbar.id.max:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.bossbar.id.value:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity:
    - include: generated.command.execute.store.success.entity.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target:
    - include: generated.command.execute.store.success.entity.target.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path:
    - include: generated.command.execute.store.success.entity.target.path.byte
    - include: generated.command.execute.store.success.entity.target.path.double
    - include: generated.command.execute.store.success.entity.target.path.float
    - include: generated.command.execute.store.success.entity.target.path.int
    - include: generated.command.execute.store.success.entity.target.path.long
    - include: generated.command.execute.store.success.entity.target.path.short
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.byte:
    - include: generated.command.execute.store.success.entity.target.path.byte.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.byte.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.double:
    - include: generated.command.execute.store.success.entity.target.path.double.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.double.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.float:
    - include: generated.command.execute.store.success.entity.target.path.float.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.float.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.int:
    - include: generated.command.execute.store.success.entity.target.path.int.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.int.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.long:
    - include: generated.command.execute.store.success.entity.target.path.long.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.long.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.short:
    - include: generated.command.execute.store.success.entity.target.path.short.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.entity.target.path.short.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.score:
    - include: generated.command.execute.store.success.score.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.score.targets:
    - include: generated.command.execute.store.success.score.targets.objective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.score.targets.objective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage:
    - include: generated.command.execute.store.success.storage.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target:
    - include: generated.command.execute.store.success.storage.target.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path:
    - include: generated.command.execute.store.success.storage.target.path.byte
    - include: generated.command.execute.store.success.storage.target.path.double
    - include: generated.command.execute.store.success.storage.target.path.float
    - include: generated.command.execute.store.success.storage.target.path.int
    - include: generated.command.execute.store.success.storage.target.path.long
    - include: generated.command.execute.store.success.storage.target.path.short
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.byte:
    - include: generated.command.execute.store.success.storage.target.path.byte.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.byte.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.double:
    - include: generated.command.execute.store.success.storage.target.path.double.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.double.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.float:
    - include: generated.command.execute.store.success.storage.target.path.float.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.float.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.int:
    - include: generated.command.execute.store.success.storage.target.path.int.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.int.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.long:
    - include: generated.command.execute.store.success.storage.target.path.long.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.long.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.short:
    - include: generated.command.execute.store.success.storage.target.path.short.scale
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.store.success.storage.target.path.short.scale:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless:
    - include: generated.command.execute.unless.block
    - include: generated.command.execute.unless.blocks
    - include: generated.command.execute.unless.data
    - include: generated.command.execute.unless.entity
    - include: generated.command.execute.unless.predicate
    - include: generated.command.execute.unless.score
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.block:
    - include: generated.command.execute.unless.block.pos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.block.pos:
    - include: generated.command.execute.unless.block.pos.block
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.block.pos.block:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.blocks:
    - include: generated.command.execute.unless.blocks.start
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.blocks.start:
    - include: generated.command.execute.unless.blocks.start.end
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.blocks.start.end:
    - include: generated.command.execute.unless.blocks.start.end.destination
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.blocks.start.end.destination:
    - include: generated.command.execute.unless.blocks.start.end.destination.all
    - include: generated.command.execute.unless.blocks.start.end.destination.masked
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.blocks.start.end.destination.all:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.blocks.start.end.destination.masked:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data:
    - include: generated.command.execute.unless.data.block
    - include: generated.command.execute.unless.data.entity
    - include: generated.command.execute.unless.data.storage
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.block:
    - include: generated.command.execute.unless.data.block.sourcePos
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.block.sourcePos:
    - include: generated.command.execute.unless.data.block.sourcePos.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.block.sourcePos.path:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.entity:
    - include: generated.command.execute.unless.data.entity.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.entity.source:
    - include: generated.command.execute.unless.data.entity.source.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.entity.source.path:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.storage:
    - include: generated.command.execute.unless.data.storage.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.storage.source:
    - include: generated.command.execute.unless.data.storage.source.path
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.data.storage.source.path:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.entity:
    - include: generated.command.execute.unless.entity.entities
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.entity.entities:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.predicate:
    - include: generated.command.execute.unless.predicate.predicate
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.predicate.predicate:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score:
    - include: generated.command.execute.unless.score.target
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target:
    - include: generated.command.execute.unless.score.target.targetObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective:
    - include: generated.command.execute.unless.score.target.targetObjective.<
    - include: generated.command.execute.unless.score.target.targetObjective.<=
    - include: generated.command.execute.unless.score.target.targetObjective.=
    - include: generated.command.execute.unless.score.target.targetObjective.>
    - include: generated.command.execute.unless.score.target.targetObjective.>=
    - include: generated.command.execute.unless.score.target.targetObjective.matches
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.<:
    - include: generated.command.execute.unless.score.target.targetObjective.<.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.<.source:
    - include: generated.command.execute.unless.score.target.targetObjective.<.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.<.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.<=:
    - include: generated.command.execute.unless.score.target.targetObjective.<=.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.<=.source:
    - include: generated.command.execute.unless.score.target.targetObjective.<=.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.<=.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.=:
    - include: generated.command.execute.unless.score.target.targetObjective.=.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.=.source:
    - include: generated.command.execute.unless.score.target.targetObjective.=.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.=.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.>:
    - include: generated.command.execute.unless.score.target.targetObjective.>.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.>.source:
    - include: generated.command.execute.unless.score.target.targetObjective.>.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.>.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.>=:
    - include: generated.command.execute.unless.score.target.targetObjective.>=.source
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.>=.source:
    - include: generated.command.execute.unless.score.target.targetObjective.>=.source.sourceObjective
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.>=.source.sourceObjective:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.matches:
    - include: generated.command.execute.unless.score.target.targetObjective.matches.range
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.execute.unless.score.target.targetObjective.matches.range:
    - include: generated.commands.execute
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.function:
    - include: generated.command.function.name
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.function.name:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.say:
    - include: generated.command.say.message
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.say.message:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.tellraw:
    - include: generated.command.tellraw.targets
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.tellraw.targets:
    - include: generated.command.tellraw.targets.message
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  generated.commands.tellraw.targets.message:
    - include: common.trailing_whitespace
    - include: error.unmatched_child
  nbt_compound:
    - match: '(\{)'
      captures:
        1: storage._.bracket.nbt_compound.mcfunction
      push:
        - match: '(\})|(?=\n)'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          pop: true
        - include: nbt_compound.content
        - include: error.bad_syntax
  nbt_compound.content:
    - include: common.block
  nbt_list:
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: '(\])|(?=\n)'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          pop: true
        - include: nbt_list.content
        - include: error.bad_syntax
  nbt_list.content:
    - include: common.block
  nbt_path:
    - match: (\w+)
      captures:
        1: string._.property.nbt_path.mcfunction
      push:
        - match: (?= |\n)
          pop: true
        - include: nbt_path.content
  nbt_path.content:
    - match: (\.)(\w+)
      captures:
        1: storage._.dot.nbt_path.mcfunction
        2: string._.property.nbt_path.mcfunction
    - match: '(\[)'
      captures:
        1: storage._.bracket.nbt_list.mcfunction
      push:
        - match: '(\])|(?=\n)'
          captures:
            1: storage._.bracket.nbt_list.mcfunction
          pop: true
        - include: nbt_path.index
    - include: nbt_compound
    - match: (\.)(?= |\n)
      captures:
        1: storage._.dot.nbt_path.mcfunction
    - include: error.bad_syntax
  nbt_path.index:
    - match: '(?<=\[)(\-?\d+)(?=\])'
      captures:
        1: constant.numeric._.number.mcfunction
    - include: nbt_compound
    - include: error.bad_syntax
  score_map.content:
    - include: common.block
  target_selector.arguments:
    - include: target_selector.content.argument.xyz
    - include: target_selector.content.argument.dxyz
    - include: target_selector.content.argument.xy_rotation
    - include: target_selector.content.argument.distance
    - include: target_selector.content.argument.team
    - include: target_selector.content.argument.tag
    - include: target_selector.content.argument.name
    - include: target_selector.content.argument.type
    - include: target_selector.content.argument.level
    - include: target_selector.content.argument.gamemode
    - include: target_selector.content.argument.sort
    - include: target_selector.content.argument.limit
    - include: target_selector.content.argument.scores
    - include: target_selector.content.argument.advancements
    - include: target_selector.content.argument.nbt
  target_selector.content:
    - match: '(?<=[^\[\,])(\,)(?= *\w)'
      scope: meta._.argument_separator.content.target_selector.mcfunction
      captures:
        1: support.class._.comma.target_selector.mcfunction
    - match: '(?<=[\[\,]) +(?=\w)'
    - match: '(?<=[^\[\,]) +(?=[\]\,])'
    - match: '(?<=\[) +(?=\])'
    - include: target_selector.arguments
  target_selector.content.argument.advancements:
    - match: '(advancements) *(\=) *(\{)'
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: storage._.bracket.advancement_map.mcfunction
      push:
        - meta_scope: meta._.advancements.argument.content.target_selector.mcfunction
        - match: '(?=\n)|(\}) *(?=[\]\,])'
          captures:
            1: storage._.bracket.advancement_map.mcfunction
          pop: true
        - include: advancement_map.content
  target_selector.content.argument.distance:
    - match: '(distance) *(\=) *(?=[^\n\]\,])'
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
      push:
        - meta_scope: meta._.distance.argument.content.target_selector.mcfunction
        - match: '(?=\n)| *(?=[\]\,])'
          pop: true
        - include: common.double_range
        - include: error.command_line
  target_selector.content.argument.dxyz:
    - match: '(dx|dy|dz) *(\=) *(\-?\d*\.?\d+) *(?=[\]\,])'
      scope: meta._.dxyz.argument.content.target_selector.mcfunction
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.numeric._.number.mcfunction
  target_selector.content.argument.gamemode:
    - match: '(gamemode) *(\=) *(\!?) *(survival|creative|adventure|spectator) *(?=[\]\,])'
      scope: meta._.gamemode.argument.content.target_selector.mcfunction
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.character.escape._.not.target_selector.mcfunction
        4: keyword._.keyword.mcfunction
  target_selector.content.argument.level:
    - match: '(level) *(\=) *(?=[^\n\]\,])'
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
      push:
        - meta_scope: meta._.level.argument.content.target_selector.mcfunction
        - match: '(?=\n)| *(?=[\]\,])'
          pop: true
        - include: common.integer_range
        - include: error.command_line
  target_selector.content.argument.limit:
    - match: '(limit) *(\=) *(0*[1-9]\d*) *(?=[\]\,])'
      scope: meta._.limit.argument.content.target_selector.mcfunction
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.numeric._.number.mcfunction
  target_selector.content.argument.name:
    - match: (name) *(\=) *(\!?) *
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.character.escape._.not.target_selector.mcfunction
      push:
        - meta_scope: meta._.name.argument.content.target_selector.mcfunction
        - match: '(?=\n)| *(?=[\]\,])'
          pop: true
        - include: common.quotable_string
        - include: error.command_line
  target_selector.content.argument.nbt:
    - match: '(nbt) *(\=) *(\!?) *(\{)'
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.character.escape._.not.target_selector.mcfunction
        4: storage._.bracket.nbt_compound.mcfunction
      push:
        - meta_scope: meta._.nbt.argument.content.target_selector.mcfunction
        - match: '(?=\n)|(\}) *(?=[\]\,])'
          captures:
            1: storage._.bracket.nbt_compound.mcfunction
          pop: true
        - include: nbt_compound.content
  target_selector.content.argument.scores:
    - match: '(scores) *(\=) *(\{)'
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: storage._.bracket.score_map.mcfunction
      push:
        - meta_scope: meta._.scores.argument.content.target_selector.mcfunction
        - match: '(?=\n)|(\}) *(?=[\]\,])'
          captures:
            1: storage._.bracket.score_map.mcfunction
          pop: true
        - include: score_map.content
  target_selector.content.argument.sort:
    - match: '(sort) *(\=) *(arbitrary|furthest|nearest|random) *(?=[\]\,])'
      scope: meta._.sort.argument.content.target_selector.mcfunction
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: keyword._.keyword.mcfunction
  target_selector.content.argument.tag:
    - match: '(tag) *(\=) *(\!?) *([\w\.\-\+]+)? *(?=[\]\,])'
      scope: meta._.tag.argument.content.target_selector.mcfunction
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.character.escape._.not.target_selector.mcfunction
        4: entity.other.attribute-name._.entity_tag.mcfunction
  target_selector.content.argument.team:
    - match: '(team) *(\=) *(\!?) *([\w\.\-\+]+)? *(?=[\]\,])'
      scope: meta._.team.argument.content.target_selector.mcfunction
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.character.escape._.not.target_selector.mcfunction
        4: entity.other.attribute-name._.scoreboard_team.mcfunction
  target_selector.content.argument.type:
    - match: '(type) *(\=) *(\!?) *(?=[^\n\]\,])'
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.character.escape._.not.target_selector.mcfunction
      push:
        - meta_scope: meta._.type.argument.content.target_selector.mcfunction
        - match: '(?=\n)| *(?=[\]\,])'
          pop: true
        - include: common.taggable_resource_location
        - include: error.command_line
  target_selector.content.argument.xy_rotation:
    - match: '(x_rotation|y_rotation) *(\=) *(?=[^\n\]\,])'
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
      push:
        - meta_scope: meta._.xy_rotation.argument.content.target_selector.mcfunction
        - match: '(?=\n)| *(?=[\]\,])'
          pop: true
        - include: common.double_range
        - include: error.command_line
  target_selector.content.argument.xyz:
    - match: '(x|y|z) *(\=) *(\-?\d*\.?\d+) *(?=[\]\,])'
      scope: meta._.xyz.argument.content.target_selector.mcfunction
      captures:
        1: keyword.other._.param.target_selector.mcfunction
        2: support.class._.equals.target_selector.mcfunction
        3: constant.numeric._.number.mcfunction
  text_component:
    - include: text_component.boolean
    - include: text_component.number
    - include: text_component.string
    - include: text_component.list
    - include: text_component.dict
  text_component.atomic:
    - include: text_component.boolean
    - include: text_component.number
    - include: text_component.string
  text_component.boolean:
    - include: common.boolean
  text_component.command_string:
    - match: (\")(\/)
      captures:
        1: string._.string.mcfunction
        2: keyword.control._.command.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: commands
  text_component.dict:
    - match: '(\{)'
      captures:
        1: storage._.bracket.text_component.mcfunction
      push:
        - match: '(?=\n)|(\})'
          captures:
            1: storage._.bracket.text_component.mcfunction
          pop: true
        - include: text_component.dict_common
        - include: text_component.properties
  text_component.dict.click_event:
    - match: '(\{)'
      captures:
        1: storage._.bracket.text_component.mcfunction
      push:
        - match: '(?=\n)|(\})'
          captures:
            1: storage._.bracket.text_component.mcfunction
          pop: true
        - include: text_component.dict_common
        - include: text_component.properties.click_event
  text_component.dict.hover_event:
    - match: '(\{)'
      captures:
        1: storage._.bracket.text_component.mcfunction
      push:
        - match: '(?=\n)|(\})'
          captures:
            1: storage._.bracket.text_component.mcfunction
          pop: true
        - include: text_component.dict_common
        - include: text_component.properties.hover_event
  text_component.dict.score:
    - match: '(\{)'
      captures:
        1: storage._.bracket.text_component.mcfunction
      push:
        - match: '(?=\n)|(\})'
          captures:
            1: storage._.bracket.text_component.mcfunction
          pop: true
        - include: text_component.dict_common
        - include: text_component.properties.score
  text_component.dict_common:
    - match: '(?<=[^\{\,])(\,)(?=[^\}\,])'
      captures:
        1: storage._.comma.text_component.mcfunction
    - include: common.dict.whitespace
  text_component.list:
    - match: '(\[)'
      captures:
        1: storage._.bracket.text_component.mcfunction
      push:
        - match: '(?=\n)|(\])'
          captures:
            1: storage._.bracket.text_component.mcfunction
          pop: true
        - include: text_component.list_common
        - include: text_component.list_values
  text_component.list_common:
    - match: '(?<=[^\[\,])(\,)(?=[^\]\,])'
      captures:
        1: storage._.comma.text_component.mcfunction
    - include: common.list.whitespace
  text_component.list_values:
    - include: text_component
    - include: error.list_value
  text_component.nbt_compound_string:
    - match: '(\")(?=\{)'
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: nbt_compound
  text_component.number:
    - include: common.number
  text_component.properties:
    - include: text_component.property.b_i_u_s_o
    - include: text_component.property.color
    - include: text_component.property.text_translate
    - include: text_component.property.extra_with
    - include: text_component.property.selector
    - include: text_component.property.score
    - include: text_component.property.keybind
    - include: text_component.property.insertion
    - include: text_component.property.click_event
    - include: text_component.property.hover_event
    - include: text_component.property.nbt
    - include: text_component.property.entity
    - include: text_component.property.block
    - include: text_component.property.interpret
    - include: error.compound_value
  text_component.properties.click_event:
    - include: text_component.property.click_event.action
    - include: text_component.property.click_event.value
    - include: error.compound_value
  text_component.properties.hover_event:
    - include: text_component.property.hover_event.action
    - include: text_component.property.hover_event.value
    - include: error.compound_value
  text_component.properties.score:
    - include: text_component.property.score.name
    - include: text_component.property.score.objective
    - include: text_component.property.score.value
    - include: error.compound_value
  text_component.property.b_i_u_s_o:
    - match: '(\")(bold|italic|underlined|strikethrough|obfuscated)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.boolean
        - include: error.compound_value
  text_component.property.block:
    - match: '(\")(block)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.position
        - include: error.compound_value
  text_component.property.click_event:
    - match: '(\")(clickEvent)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.dict.click_event
        - include: error.compound_value
  text_component.property.click_event.action:
    - match: '(\")(action)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.click_event
        - include: error.compound_value
  text_component.property.click_event.value:
    - match: '(\")(value)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.command_string
        - include: text_component.string
        - include: error.compound_value
  text_component.property.color:
    - match: '(\")(color)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.color
        - include: error.compound_value
  text_component.property.entity:
    - match: '(\")(entity)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.target
        - include: error.compound_value
  text_component.property.extra_with:
    - match: '(\")(extra|with)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.list
        - include: error.compound_value
  text_component.property.hover_event:
    - match: '(\")(hoverEvent)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.dict.hover_event
        - include: error.compound_value
  text_component.property.hover_event.action:
    - match: '(\")(action)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.hover_event
        - include: error.compound_value
  text_component.property.hover_event.value:
    - match: '(\")(value)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.nbt_compound_string
        - include: text_component
        - include: error.compound_value
  text_component.property.insertion:
    - match: '(\")(insertion)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.command_string
        - include: text_component.string
        - include: error.compound_value
  text_component.property.interpret:
    - match: '(\")(interpret)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.boolean
        - include: error.compound_value
  text_component.property.keybind:
    - match: '(\")(keybind)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.keybind
        - include: error.compound_value
  text_component.property.nbt:
    - match: '(\")(nbt)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.nbt
        - include: error.compound_value
  text_component.property.score:
    - match: '(\")(score)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.dict.score
        - include: error.compound_value
  text_component.property.score.name:
    - match: '(\")(name)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.score_holder
        - include: error.compound_value
  text_component.property.score.objective:
    - match: '(\")(objective)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.objective
        - include: error.compound_value
  text_component.property.score.value:
    - match: '(\")(value)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.atomic
        - include: error.compound_value
  text_component.property.selector:
    - match: '(\")(selector)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.string.target
        - include: error.compound_value
  text_component.property.text_translate:
    - match: '(\")(text|translate)(\") *(\:) *(?=[^\s\,\}])'
      captures:
        1: string._.string.mcfunction
        2: string._.property.text_component.mcfunction
        3: string._.string.mcfunction
        4: storage._.colon.nbt_compound.mcfunction
      push:
        - match: '(?=\n)|(?= *[\,\}])'
          pop: true
        - include: text_component.atomic
        - include: error.compound_value
  text_component.string:
    - include: common.double_quoted_string
  text_component.string.click_event:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - match: (open_url|open_file|run_command|suggest_command|change_page)
          scope: string._.event.property.text_component.mcfunction
        - include: error.double_quoted_string.content
  text_component.string.color:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - match: (black|dark_blue|dark_green|dark_aqua|dark_red|dark_purple|gold|gray|dark_gray|blue|green|aqua|red|light_purple|yellow|white)
          scope: string._.color.property.text_component.mcfunction
        - include: error.double_quoted_string.content
  text_component.string.hover_event:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - match: (show_text|show_item|show_entity)
          scope: string._.event.property.text_component.mcfunction
        - include: error.double_quoted_string.content
  text_component.string.keybind:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - match: (key\.forward|key\.left|key\.back|key\.right|key\.jump|key\.sneak|key\.sprint|key\.inventory|key\.swapHands|key\.drop|key\.use|key\.attack|key\.pickItem|key\.chat|key\.playerlist|key\.command|key\.screenshot|key\.togglePerspective|key\.smoothCamera|key\.fullscreen|key\.spectatorOutlines|key\.hotbar\.1|key\.hotbar\.2|key\.hotbar\.3|key\.hotbar\.4|key\.hotbar\.5|key\.hotbar\.6|key\.hotbar\.7|key\.hotbar\.8|key\.hotbar\.9|key\.saveToolbarActivator|key\.loadToolbarActivator)
          scope: string._.keybind.property.text_component.mcfunction
        - include: error.double_quoted_string.content
  text_component.string.nbt:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: text_component.string.nbt.content
        - include: error.double_quoted_string.content
  text_component.string.nbt.content:
    - include: nbt_path
  text_component.string.objective:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: text_component.string.objective.content
        - include: error.double_quoted_string.content
  text_component.string.objective.content:
    - match: '(?<=\")([\w\.\-\+]+)(?=\")'
      scope: entity.other.attribute-name._.scoreboard_objective.mcfunction
  text_component.string.position:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: text_component.string.position.content
        - include: error.double_quoted_string.content
  text_component.string.position.content:
    - match: (?<=\")(?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+)) (?:(\~)(\-?\d*\.?\d+)?|(\-?\d*\.?\d+))(?=\")
      captures:
        1: keyword.control._.operator.relative.position.mcfunction
        2: constant.numeric._.number.relative.position.mcfunction
        3: constant.numeric._.number.absolute.position.mcfunction
        4: keyword.control._.operator.relative.position.mcfunction
        5: constant.numeric._.number.relative.position.mcfunction
        6: constant.numeric._.number.absolute.position.mcfunction
        7: keyword.control._.operator.relative.position.mcfunction
        8: constant.numeric._.number.relative.position.mcfunction
        9: constant.numeric._.number.absolute.position.mcfunction
    - match: (?<=\")(\^)(\-?\d*\.?\d+)? (\^)(\-?\d*\.?\d+)? (\^)(\-?\d*\.?\d+)?(?=\")
      captures:
        1: keyword.control._.operator.local.position.mcfunction
        2: constant.numeric._.number.local.position.mcfunction
        3: keyword.control._.operator.local.position.mcfunction
        4: constant.numeric._.number.local.position.mcfunction
        5: keyword.control._.operator.local.position.mcfunction
        6: constant.numeric._.number.local.position.mcfunction
  text_component.string.score_holder:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: text_component.string.score_holder.content
        - include: error.double_quoted_string.content
  text_component.string.score_holder.content:
    - match: (?<=\")(\*)(?=\")
      scope: support.class._.all.score_holder.mcfunction
    - match: '(?<=\")([\w\.\-\#\$\%]+)(?=\")'
      scope: support.class._.fakeplayer.score_holder.mcfunction
    - include: text_component.string.target.content
  text_component.string.target:
    - match: (\")
      captures:
        1: string._.string.mcfunction
      push:
        - match: (?=\n)|(\")
          captures:
            1: string._.string.mcfunction
          pop: true
        - include: text_component.string.target.content
        - include: error.double_quoted_string.content
  text_component.string.target.content:
    - match: '(?<=\")(\@[parse])(?=\")'
      scope: support.class._.base.target_selector.mcfunction
    - match: '(?<=\")([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})(?=\")'
      scope: support.class._.uuid.target.mcfunction
    - match: (?<=\")(\w+)(?=\")
      scope: support.class._.player_name.target.mcfunction
    - match: '(?<=\")(\@[parse])(\[)(?= *[\w\]])'
      captures:
        1: support.class._.base.target_selector.mcfunction
        2: support.class._.bracket.target_selector.mcfunction
      push:
        - match: '(?=\n)|(?=\")|(\])(?=\")'
          captures:
            1: support.class._.bracket.target_selector.mcfunction
          pop: true
        - include: target_selector.content
        - include: error.double_quoted_string.content
  unknown:
    - match: ^((.*))$
      scope: meta._.unknown.mcfunction
      captures:
        1: invalid.illegal._.invalid.mcfunction
        2: markup.underline._.underline.mcfunction
